name: CI

on: [push]

jobs:
  sast_scan:
    name: Running Bandit Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 # by specifying the version, we can avoid the need to run `python -m pip install --upgrade pip` to upgrade pip

      # Install Bandit
      - name: Install Bandit
        run: pip install bandit

      # Run Bandit Scan
      - name: Run Bandit Scan
        run: bandit -ll -ii -r -f json -o bandit-report.json .

      # Install Semgrep
      - name: Install Semgrep
        run: pip install semgrep

      # Run Semgrep Scan
      - name: Run Semgrep Scan
        run: semgrep --config=p/ci --json -o semgrep-report.json .

      # Upload SAST Reports
      - name: Upload SAST Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: sast-reports
          path: |
            bandit-report.json
            semgrep-report.json

      # Add image scan
  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@v1
        with:
          docker_version: "22.0.0"

      - name: Build Docker Image
        run: docker build -f Dockerfile -t myapp:latest .

      # - name: Docker Scout Scan
      #   run: |
      #     curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
      #     sh install-scout.sh
      #     echo ${{ secrets.DOCKER_SECRET }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      #     docker scout quickview
      #     docker scout cves

      - name: Docker Scout Scan
        uses: docker/scout-action@v1.5.1 # Using the latest version
        with:
          dockerhub-user: ${{ secrets.DOCKER_USER }}
          dockerhub-password: ${{ secrets.DOCKER_SECRET }}
          command: quickview,cves
          only-severities: critical,high
          sarif-file: scout-report.sarif
          # exit-code: true
        env:
          DOCKER_CONFIG: /home/runner/.docker # Ensure this path is correct
          DOCKER_CLI_EXPERIMENTAL: enabled

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docker-scout-findings
          path: scout-report.sarif

      # Trivy scan setup and execution
      - name: Install Trivy
        if: always()
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https gnupg lsb-release
          curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      # Run Trivy vulnerability scan
      - name: Run Trivy vulnerability scan
        if: always()
        run: trivy image --format template --template "@contrib/sarif.tpl" -o trivy-report.sarif myapp:latest

      # Upload Trivy Report
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: trivy-vulnerability-report
          path: trivy-report.sarif
